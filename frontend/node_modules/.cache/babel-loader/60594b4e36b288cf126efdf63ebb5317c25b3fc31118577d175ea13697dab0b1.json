{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nfunction register({\n  email,\n  password\n}) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => checkResponse(res));\n}\nfunction login({\n  email,\n  password\n}) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => checkResponse(res));\n}\nfunction checkToken(jwt) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${jwt}`\n    }\n  }).then(res => checkResponse(res));\n}\nconst checkResponse = res => res.ok ? res.json() : Promise.reject('Ошибка');\nexport { register, login, checkToken };","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","checkResponse","login","checkToken","jwt","ok","json","Promise","reject"],"sources":["/Users/darvin/Desktop/Frontend/Mesto frontend + backend/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co'\n\nfunction register({ email, password }) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ password, email })\n  })\n    .then(res => checkResponse(res))\n}\n\nfunction login({ email, password }) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ password, email })\n  })\n    .then(res => checkResponse(res))\n}\nfunction checkToken(jwt) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${jwt}`\n    }\n  })\n    .then(res => checkResponse(res))\n}\n\nconst checkResponse = res => res.ok ? res.json() : Promise.reject('Ошибка')\n\nexport { register, login, checkToken }"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EACrC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAED;IAAM,CAAC;EAC1C,CAAC,CAAC,CACCQ,IAAI,CAACC,GAAG,IAAIC,aAAa,CAACD,GAAG,CAAC,CAAC;AACpC;AAEA,SAASE,KAAKA,CAAC;EAAEX,KAAK;EAAEC;AAAS,CAAC,EAAE;EAClC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAED;IAAM,CAAC;EAC1C,CAAC,CAAC,CACCQ,IAAI,CAACC,GAAG,IAAIC,aAAa,CAACD,GAAG,CAAC,CAAC;AACpC;AACA,SAASG,UAAUA,CAACC,GAAG,EAAE;EACvB,OAAOX,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASS,GAAI;IACjC;EACF,CAAC,CAAC,CACCL,IAAI,CAACC,GAAG,IAAIC,aAAa,CAACD,GAAG,CAAC,CAAC;AACpC;AAEA,MAAMC,aAAa,GAAGD,GAAG,IAAIA,GAAG,CAACK,EAAE,GAAGL,GAAG,CAACM,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAC,QAAQ,CAAC;AAE3E,SAASlB,QAAQ,EAAEY,KAAK,EAAEC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}